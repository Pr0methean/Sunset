<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.393" tests="57" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="9+178"/>
    <property name="sun.boot.library.path" value="/usr/bin/jdk-9/lib"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.dir" value="/home/ubuntu/workspace"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.runtime.version" value="9+178"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="~/.c9/local/lib:/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="53.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.9.17-c9"/>
    <property name="user.home" value="/home/ubuntu"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="9"/>
    <property name="user.name" value="ubuntu"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="9"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.home" value="/usr/bin/jdk-9"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="9"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="putOrderedObject" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.009"/>
  <testcase name="putOrderedInt" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putOrderedLong" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="compareAndSwapInt" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
  <testcase name="compareAndSwapObject" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="compareAndSwapLong" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.003"/>
  <testcase name="loadFence" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="storeFence" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="fullFence" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getObject" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putObject" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
  <testcase name="getBoolean" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putBoolean" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.003"/>
  <testcase name="getByte" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putByte" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getShort" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putShort" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
  <testcase name="getChar" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putChar" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getInt" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putInt" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getLong" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putLong" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getFloat" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putFloat" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getDouble" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putDouble" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getObjectVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putObjectVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getBooleanVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putBooleanVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getByteVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.003"/>
  <testcase name="putByteVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getShortVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putShortVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getCharVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putCharVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getIntVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putIntVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getLongVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putLongVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getFloatVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putFloatVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="getDoubleVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="putDoubleVolatile" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
  <testcase name="objectFieldOffset" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="staticFieldBase" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
  <testcase name="staticFieldOffset" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="allocateMemory" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="reallocateMemory" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
  <testcase name="setMemory" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="copyMemory" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="freeMemory" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
  <testcase name="arrayBaseOffset" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
  <testcase name="arrayIndexScale" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="addressSize" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0"/>
  <testcase name="pageSize" classname="sunset.memory.sun.SunLowLevelMemoryAccessorTest" time="0.001"/>
</testsuite>